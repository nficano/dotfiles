#!/usr/bin/env bash

# Terminate for non-interactive sessions.
case $- in
*i*) ;;
*) return ;; esac

# Resolve dotfiles root so sourcing works via symlinks
if [[ -z "${DOTFILES_ROOT:-}" ]]; then
  DOTFILES_ROOT="$(
    src="${BASH_SOURCE[0]}"
    while [[ -h "$src" ]]; do
      dir="$(cd -P -- "$(dirname -- "$src")" && pwd)"
      src="$(readlink "$src")"
      [[ $src != /* ]] && src="$dir/$src"
    done
    cd -P -- "$(dirname -- "$src")" && pwd
  )"
  export DOTFILES_ROOT
fi

# Source helper functions
# shellcheck source=/dev/null
source "${DOTFILES_ROOT}/../../lib/bash/initrc"

os.setenv "TERM" "xterm-256color"
os.setenv "GPG_TTY" "$(tty)"
os.setenv "DOTFILES_VERSION" "4.2.0"
os.setenv "DIRENV_LOG_FORMAT" ""

# Python Shell Environment
os.setenv "POETRY_VIRTUALENVS_PATH" "$HOME/.virtualenvs"
os.setenv "PYENV_ROOT" "$HOME/.pyenv"
os.setenv "PYTHONDONTWRITEBYTECODE" true
os.setenv "WORKON_HOME" "$HOME/.virtualenvs"
os.setenv "COPYX_CONFIG" "$HOME/.config/copyx/config.yml"
# Homebrew Shell Environment
os.setenv "BREW_PREFIX" "$(brew.prefix)"
os.setenv "HOMEBREW_CASKROOM" "$BREW_PREFIX/Caskroom"
os.setenv "HOMEBREW_CELLAR" "$BREW_PREFIX/Cellar"
os.setenv "HOMEBREW_REPOSITORY" "$BREW_PREFIX/Homebrew"
os.setenv "HOMEBREW_SHELLENV_PREFIX" "$BREW_PREFIX"
os.setenv "MANPATH" "$BREW_PREFIX/share/man${MANPATH+:$MANPATH}:"
os.setenv "INFOPATH" "$BREW_PREFIX/share/info:${INFOPATH:-}"
os.setenv "HOMEBREW_NO_ENV_HINTS" 1
os.setenv "ARCHFLAGS" "-arch $(uname -m)"
os.setenv "BASH_SILENCE_DEPRECATION_WARNING" 1
os.setenv "HSTR_CONFIG" "hicolor"

# Node.js Environment
os.setenv "NODE_REPL_HISTORY" "$HOME/.node_history" # persistent REPL history
os.setenv "NODE_REPL_HISTORY_SIZE" 32768            # allow 32Â³ entries
os.setenv "NODE_REPL_MODE" "sloppy"                 # use non-strict mode code
os.setenv "NVM_DIR" "$HOME/.nvm"

# Shell Session Command History
os.setenv "HISTCONTROL" "ignoredups:erasedups:ignoreboth"
os.setenv "HISTFILESIZE" -1
os.setenv "HISTSIZE" -1

os.setenv "SHELL_SESSION_HISTORY" 0 # Save & reload history after each command
os.setenv "PROMPT_COMMAND" "history -a; history -n; $PROMPT_COMMAND"
os.setenv "MANPAGER" "less"
os.setenv "VISUAL" "cursor"
os.setenv "EDITOR" "cursor"
os.setenv "HSTR_TIOCSTI" "y"

os.setenv "LESS" "-R"

# Set various Bash options.
shell.setopt "cdspell"      # directory name auto-correct during cd.
shell.setopt "checkwinsize" # Update window size after each command.
shell.setopt "cmdhist"      # Save multi-line commands as one.
shell.setopt "histappend"   # Append command history instead of
# clobbering.
shell.setopt "hostcomplete"            # tab-complete hostnames.
shell.setopt "no_empty_cmd_completion" # Do not suggest empty commands
# during tab completion.
shell.setopt "nocaseglob" # Case-insensitive path expansion.
shell.setopt "cdspell"    # Automatic spell-correct during
# tab completion.
shell.setopt "histverify" # !$ does not execute automatically.
shell.setopt "histappend" # Append command history instead of clobbering.

# Untracked Shell Scripts (DO NOT SORT)
sys.path.prepend "$HOME/.bin"

# Prefer GNU Utilities instead of FeeeBSD When Available
sys.path.prepend_many \
  "$BREW_PREFIX/opt/coreutils/libexec/gnubin" \
  "$BREW_PREFIX/opt/findutils/libexec/gnubin" \
  "$BREW_PREFIX/opt/gnu-getopt/libexec/gnubin" \
  "$BREW_PREFIX/opt/gnu-sed/libexec/gnubin" \
  "$BREW_PREFIX/opt/gnu-tar/libexec/gnubin" \
  "$BREW_PREFIX/opt/gnu-time/libexec/gnubin" \
  "$BREW_PREFIX/opt/gnu-which/libexec/gnubin" \
  "$BREW_PREFIX/opt/grep/libexec/gnubin" \
  "$BREW_PREFIX/opt/whois/bin" \
  "$BREW_PREFIX/opt/icu4c/bin" \
  "$BREW_PREFIX/opt/icu4c/sbin" \
  "$BREW_PREFIX/opt/openssl/bin" \
  "$BREW_PREFIX/opt/openjdk/bin" \
  "$BREW_PREFIX/opt/e2fsprogs/bin" \
  "$BREW_PREFIX/opt/e2fsprogs/sbin" \
  "$BREW_PREFIX/bin" \
  "$BREW_PREFIX/sbin" \
  "$HOME/.local/bin" \
  "$HOME/.docker/bin" \
  "$HOME/.pyenv/bin"

shell.defer --wrap docker shell.import "$HOME/.docker/init-bash.sh"
shell.defer --wrap gcloud shell.import "$BREW_CASKROOM/google-cloud-sdk/latest/google-cloud-sdk/completion.bash.inc"
shell.defer --wrap gcloud shell.import "$BREW_PREFIX/share/google-cloud-sdk/completion.bash.inc"
shell.defer --wrap git shell.import "$BREW_PREFIX/opt/git-extras/share/git-extras/git-extras-completion.sh"
shell.defer --wrap nvm shell.import "$BREW_PREFIX/opt/nvm/nvm.sh"
shell.defer --wrap op shell.import "$HOME/.config/op/plugins.sh"
shell.import "$BREW_PREFIX/bin/virtualenvwrapper_lazy.sh"
shell.import "$BREW_PREFIX/opt/bash-completion/etc/bash_completion"
shell.import "$HOME/.iterm2_shell_integration.bash"

# Use "most" for Manpages when available, otherwise use "less".
sys.path.contains "most" && os.setenv "MANPAGER" "most"

# Use "vscode" for text editing when available, otherwise use "nano".
sys.path.contains "cursor" && os.setenv "VISUAL" "cursor"
sys.path.contains "cursor" && os.setenv "EDITOR" "cursor"
when.cmd ngrok  'shell.eval "ngrok completion"'
when.cmd aws    'shell.eval "complete -C aws_completer aws"'
when.cmd direnv 'shell.eval "direnv hook bash"'
when.cmd pyenv  'shell.eval "pyenv init --path"'
when.cmd pyenv  'shell.eval "pyenv init -"'
when.cmd pyenv  'shell.eval "pyenv virtualenv-init -"'
when.cmd rbenv  'shell.eval "rbenv init -"'
when.cmd dircolors 'shell.eval "dircolors -b $HOME/.dircolors"'
# sys.path.contains "conda" && shell.eval "conda shell.bash hook"

complete -cf sudo # enable sudo tab-complete

alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ~="cd ~/Desktop"
alias ~~="cd ~/"
alias -- -="cd -"
alias cp="cp -i"
alias l="ls"
alias sl="ls"
alias la="ll -la"
alias grep="grep --color=auto"
alias fgrep="fgrep --color=auto"
alias egrep="egrep --color=auto"
alias rsync="rsync -v -P"
alias sudo="sudo "
alias ga="git add"
alias gd="git diff"
alias gs="git status"
alias gl="git log --oneline --graph --decorate --all"

when.darwin alias o="open ./"

# Create alias to cd to current working Finder directory.
when.darwin alias f='cd "$(finder-front-path)" || exit 0'
alias.setup_ls

when.cmd rlwrap alias node="env NODE_NO_READLINE=1 rlwrap node"
when.cmd bat alias cat="bat --style=\"plain\" --paging never"
when.cmd op 'source <(op completion bash)'

shell.setup_prompt
ssh_agent.init "$HOME/.ssh-agent.env"

# Late PATH additions
sys.path.append "$HOME/Dropbox/.sbin"

# Untracked Private Overrides
shell.import "$HOME/.profile.local"

when.my_machine sys.path.append "$HOME/.bin/personal"
