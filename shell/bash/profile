#!/usr/bin/env bash

# Exit early for non-interactive shells.
[[ $- != *i* ]] && return

# Resolve dotfiles root based on this profile location.
if [[ -z "${DOTFILES_ROOT:-}" ]]; then
  __dotfiles_source="${BASH_SOURCE[0]}"
  while [[ -h "$__dotfiles_source" ]]; do
    __dotfiles_dir="$(cd -P "$(dirname "$__dotfiles_source")" && pwd)"
    __dotfiles_source="$(readlink "$__dotfiles_source")"
    [[ $__dotfiles_source != /* ]] && __dotfiles_source="${__dotfiles_dir}/${__dotfiles_source}"
  done
  DOTFILES_ROOT="$(cd -P "$(dirname "$__dotfiles_source")" && pwd)"
  export DOTFILES_ROOT
  unset __dotfiles_dir __dotfiles_source
fi

shared_profile="${DOTFILES_ROOT}/../lib.sh"
if [[ -f "$shared_profile" ]]; then
  # shellcheck disable=SC1090
  source "$shared_profile"
fi

# Bash-specific history behavior.
export PROMPT_COMMAND="history -a; history -n; ${PROMPT_COMMAND:-}"

# Enable useful Bash options.
shopt -s cdspell
shopt -s checkwinsize
shopt -s cmdhist
shopt -s histappend
shopt -s hostcomplete
shopt -s no_empty_cmd_completion
shopt -s nocaseglob
shopt -s histverify

# Completions and runtime integrations.
if [[ -f "$HOME/.docker/init-bash.sh" ]]; then
  # shellcheck disable=SC1090
  source "$HOME/.docker/init-bash.sh"
fi

if [[ -n "${HOMEBREW_CASKROOM:-}" ]]; then
  if [[ -f "$HOMEBREW_CASKROOM/google-cloud-sdk/latest/google-cloud-sdk/completion.bash.inc" ]]; then
    # shellcheck disable=SC1090
    source "$HOMEBREW_CASKROOM/google-cloud-sdk/latest/google-cloud-sdk/completion.bash.inc"
  fi
fi

if [[ -n "${BREW_PREFIX:-}" ]]; then
  if [[ -f "$BREW_PREFIX/share/google-cloud-sdk/completion.bash.inc" ]]; then
    # shellcheck disable=SC1090
    source "$BREW_PREFIX/share/google-cloud-sdk/completion.bash.inc"
  fi

  if [[ -f "$BREW_PREFIX/opt/git-extras/share/git-extras/git-extras-completion.sh" ]]; then
    # shellcheck disable=SC1090
    source "$BREW_PREFIX/opt/git-extras/share/git-extras/git-extras-completion.sh"
  fi

  if [[ -f "$BREW_PREFIX/opt/nvm/nvm.sh" ]]; then
    # shellcheck disable=SC1090
    source "$BREW_PREFIX/opt/nvm/nvm.sh"
  fi

  if [[ -f "$BREW_PREFIX/opt/bash-completion/etc/bash_completion" ]]; then
    # shellcheck disable=SC1090
    source "$BREW_PREFIX/opt/bash-completion/etc/bash_completion"
  fi
fi

if [[ -f "$HOME/.config/op/plugins.sh" ]]; then
  # shellcheck disable=SC1090
  source "$HOME/.config/op/plugins.sh"
fi

if [[ -f "$HOME/.iterm2_shell_integration.bash" ]]; then
  # shellcheck disable=SC1090
  source "$HOME/.iterm2_shell_integration.bash"
fi

if [[ -f "$HOME/.bash_profile.local" ]]; then
  # shellcheck disable=SC1090
  source "$HOME/.bash_profile.local"
fi

# Tool-specific enhancements.
if command -v ngrok >/dev/null 2>&1; then
  eval "$(ngrok completion)"
fi

if command -v aws >/dev/null 2>&1 && command -v aws_completer >/dev/null 2>&1; then
  complete -C aws_completer aws
fi

if command -v direnv >/dev/null 2>&1; then
  eval "$(direnv hook bash)"
fi

if command -v pyenv >/dev/null 2>&1; then
  eval "$(pyenv init --path)"
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"
fi

if command -v rbenv >/dev/null 2>&1; then
  eval "$(rbenv init -)"
fi

if command -v op >/dev/null 2>&1; then
  eval "$(op completion bash)"
fi

complete -cf sudo

# Prompt configuration mimicking the previous Bash prompt behavior.
__dotfiles_prompt_path() {
  local path
  path="$(dirs +0)"

  local IFS="/"
  read -ra parts <<<"$path"
  local last_index=$(( ${#parts[@]} - 1 ))

  if (( ${#parts[@]} == 0 )); then
    printf '/'
    return
  fi

  local buffer=""
  local i
  for (( i=0; i<last_index; i++ )); do
    [[ -z "${parts[i]}" ]] && continue
    buffer+="${parts[i]:0:1}/"
  done

  if [[ -z "${parts[last_index]}" ]]; then
    printf '/'
    return
  fi

  printf '%s' "${buffer}${parts[last_index]}"
}

PS1='\h \[\e[1;32m\]$(__dotfiles_prompt_path)\[\e[0m\] [\A] > '
