#!/usr/bin/env bash

# Flow-control helpers echoing Python's functools and subprocess patterns.
when.cmd() {
    local c="$1"; shift || true
    command -v "$c" >/dev/null 2>&1 || return 1
    if (($# == 0)); then
        return 0
    elif (($# == 1)); then
        eval "$1"
    else
        "$@"
    fi
}

when.not_cmd() {
    local c="$1"; shift || true
    command -v "$c" >/dev/null 2>&1 && return 1
    if (($# == 0)); then
        return 0
    elif (($# == 1)); then
        eval "$1"
    else
        "$@"
    fi
}

when.darwin() {
    os.platform.is_darwin || return 1
    "$@"
}

when.linux() {
    os.platform.is_linux || return 1
    "$@"
}

when.my_machine() {
    os.machine_id.matches_current || return 1
    "$@"
}

run.maybe() {
    local dry_flag="$1" desc="$2"
    shift 2 || true
    if (( dry_flag )); then
        if [[ -n "$desc" ]]; then
            log.info "[dry-run] $desc"
        fi
        if (($#)); then
            local formatted=""
            local part
            for part in "$@"; do
                formatted+="$(printf '%q ' "$part")"
            done
            [[ -n "$formatted" ]] && log.info "          ${formatted% }"
        fi
        return 0
    fi
    (($#)) || return 0
    "$@"
}

require.cmd() {
    local missing=0
    local c
    for c in "$@"; do
        if ! sys.path.contains "$c"; then
            log.error "Required command not found: $c"
            missing=1
        fi
    done
    (( missing == 0 ))
}

ensure.cmds() {
    if (($# == 0)); then
        log.error "ensure.cmds requires at least one command"
        return 2
    fi

    local spec cmd formula
    local -a missing_cmds=()
    local -a missing_formulae=()

    for spec in "$@"; do
        cmd=${spec%%:*}
        formula=${spec#*:}
        if [[ "$spec" != *:* ]]; then
            formula="$cmd"
        fi

        if sys.path.contains "$cmd"; then
            continue
        fi

        missing_cmds+=("$cmd")
        missing_formulae+=("$formula")
    done

    (( ${#missing_cmds[@]} )) || return 0

    if ! os.platform.is_darwin; then
        for cmd in "${missing_cmds[@]}"; do
            log.error "Required command not found: $cmd"
        done
        return 1
    fi

    local brew_bin
    brew_bin=$(command -v brew 2>/dev/null || true)
    if [[ -z "$brew_bin" ]]; then
        log.error "Homebrew is required to install: ${missing_cmds[*]}"
        return 1
    fi

    log.info "Installing missing dependencies via Homebrew: ${missing_formulae[*]}"
    if ! "$brew_bin" install "${missing_formulae[@]}"; then
        log.error "Failed to install required dependencies via Homebrew"
        return 1
    fi

    for cmd in "${missing_cmds[@]}"; do
        if ! sys.path.contains "$cmd"; then
            log.error "Command still missing after installation: $cmd"
            return 1
        fi
    done

    return 0
}

retry() {
    local tries=${1:-3} sleep_s=${2:-1} cmd=${3}
    local n=0
    until eval "$cmd"; do
        (( n++ >= tries )) && return 1
        sleep $(( sleep_s * n ))
    done
}
