#!/usr/bin/env bash
#/ Unzip each .zip file in the current directory into its own folder.
#/
#/ Usage: $(basename "$0") [-h] [-v]
#/
#/ Available options:
#/    -h, --help      Print this help and exit
#/    -v, --verbose   Enable verbose output
#/
#/ Details:
#/    Skips archives that have already been extracted.

set -Eeuo pipefail
trap script.cleanup SIGINT SIGTERM ERR EXIT

source "$(dirname "$0")/../lib/bash/initrc"

script_dir=$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd -P)

verbose=0

parse_args() {
  local remaining
  remaining=$(script.parse_common "$@")

  if [[ -n "$remaining" ]]; then
    log.error "This script does not accept positional arguments"
    script.usage 1
  fi
}

extract_zip() {
  local file="$1" folder
  folder="${file%.*}"
  mkdir -p "$folder"
  unzip -n "$file" -d "$folder" >/dev/null
  (( verbose )) && log.info "Extracted $file -> $folder"
}

main() {
  if ! require.cmd unzip; then
    log.error "unzip command is required"
    exit 1
  fi

  shopt -s nullglob

  log.info "Extracting zip archives in $(pwd)"

  local matched=0 file
  for file in *.zip; do
    matched=1
    extract_zip "$file"
  done

  if (( ! matched )); then
    log.warn "No zip files found"
  fi
}

parse_args "$@"
main
