#!/usr/bin/env bash
#/ Remove and print the first element from a list key.
#/
#/ Usage: kv-list-pop-left <key>
#/
#/ Options:
#/    -h, --help      Print this help and exit
#/
#/ Examples:
#/    kv-list-pop-left --help
#/    kv-list-pop-left mylist
set -euo pipefail
HERE="$(cd "$(dirname "$0")" && pwd)"
. "$HERE/../lib/envdb"

usage () {
    grep '^#/ ' < "$0" | cut -c4- | sed "s/\$(basename \"\$0\")/${0##*/}/g"
    exit 0
}

main() {
  # Check for help flags first
  if [ $# -eq 1 ] && [[ "$1" == "-h" || "$1" == "--help" ]]; then
    usage
  fi

  [ $# -eq 1 ] || { usage; exit 2; }
  init_db
  local key="$1" t
  t=$(key_type "$key" || true)
  if [ -z "${t:-}" ]; then
    exit 1
  elif [ "$t" != "list" ]; then
    wrongtype
  fi
  local k; k=$(sql_escape "$key")
  # fetch min idx and value
  local row
  row=$("$SQLITE_BIN" -batch -noheader -separator $'\t' -cmd 'PRAGMA foreign_keys=ON;' "$REDISQL_DB" \
    "SELECT idx, value FROM list_entries WHERE key='${k}' ORDER BY idx ASC LIMIT 1;")
  if [ -z "${row}" ]; then
    exit 1
  fi
  local idx val
  idx=${row%%$'\t'*}
  val=${row#*$'\t'}
  # delete that row
  "$SQLITE_BIN" -batch -noheader -cmd 'PRAGMA foreign_keys=ON;' "$REDISQL_DB" \
    "DELETE FROM list_entries WHERE key='${k}' AND idx=${idx};" >/dev/null
  # if list becomes empty, delete key
  local cnt
  cnt=$("$SQLITE_BIN" -batch -noheader -cmd 'PRAGMA foreign_keys=ON;' "$REDISQL_DB" \
    "SELECT COUNT(1) FROM list_entries WHERE key='${k}';")
  if [ "${cnt}" = "0" ]; then delete_key "$key"; fi
  printf "%s\n" "$val"
}

main "$@"
