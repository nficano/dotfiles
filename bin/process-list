#!/bin/bash
#/ Show a filtered, formatted, and sorted process list.
#/
#/ Usage:
#/      process-list [-h] [--help]
#/      process-list [--no-macos]
#/
#/ DESCRIPTION
#/      This script provides a more readable version of the `ps aux` command output.
#/      It filters out processes run by users whose usernames start with an underscore,
#/      removes duplicate commands, and displays the username, PID, path, and command
#/      in a nicely formatted table. The usernames are displayed in green, and the
#/      output is sorted by the username. This script can be useful for quickly reviewing
#/      system processes in a more user-friendly format.
#/      The --no-macos flag hides processes that originate from /System paths (macOS specific).
#/

set -o errexit # Exit on most errors (see the manual)
set -o nounset # Disallow expansion of unset variables

# Set up a variable to track if --no-macos flag is used
NO_MACOS=false

usage() {
  grep '^#/ ' <"$0" | cut -c4- | sed "s/{{ basename }}/${0##*/}/"
  exit 1
}

# Check for arguments
for arg in "$@"; do
  case "$arg" in
  --no-macos)
    NO_MACOS=true
    ;;
  -h | --help)
    usage
    ;;
  *)
    usage
    ;;
  esac
done

{
  # Print the header with proper spacing
  printf "%-9s %-10s %-50s %-s\n" "USER" "PID" "COMMAND" "PATH"

  # Process the `ps aux` output, excluding certain users and duplicates
  ps aux | awk -v green="$(tput setaf 2)" -v reset="$(tput sgr0)" -v no_macos="$NO_MACOS" '
    NR>1 && $1 !~ /^_/ {
        full_cmd = $11;
        cmd = full_cmd;
        path = "";

        # Separate path and command
        if (match(full_cmd, /[^\/]+$/)) {
            cmd = substr(full_cmd, RSTART, RLENGTH);
            path = substr(full_cmd, 1, RSTART - 1);
        }

        # Skip if --no-macos flag is set and the path starts with /System
        if (no_macos == "true" && path ~ /^\/System/) {
            next;
        }

        if (!seen[full_cmd]++) {
            printf "%-20s %-10s %-50s %-s\n", green $1 reset, $2, cmd, path;
        }
    }' | sort -k3
}
